{"version":3,"file":"static/js/749.6f898f72.chunk.js","mappings":"ySAIMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHiB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKQ,SAFiB,2CAAH,qD,gHCjCfC,EAAaC,EAAAA,GAAAA,GAAH,8DAKVC,EAAYD,EAAAA,GAAAA,GAAH,wf,SCHTE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAOI,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAC1B,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAahB,GAAMiB,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKP,KAEP,uBAAIA,QAVQd,EADU,IAgB5B,OAAO,SAACK,EAAD,UAAaO,GACrB,C,yKCjBc,SAASU,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBF,GAAW,GACXF,EAAS,MAHO,UAIKhC,EAAAA,EAAAA,MAJL,OAIVqC,EAJU,OAKhBP,EAAUO,EAAO3B,SALD,gDAOhBsB,EAAS,KAAEM,UAPK,yBAShBJ,GAAW,GATK,4EAAH,qDAYjBE,GACD,GAAE,IAEErB,GAKH,4BACGkB,IAAW,SAAC,IAAD,IACXF,IAAS,SAAC,IAAD,CAAQQ,IAAKR,KACvB,4CACA,SAAC,IAAD,CAAWhB,OAAQA,OARd,IAWV,C,gFCrCYyB,E,QAAc5B,GAAAA,IAAH,qN,SCCT,SAAS6B,IACtB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,gGCVc,SAASC,EAAT,GAA0B,IAARR,EAAO,EAAPA,IAE/B,OADAS,EAAAA,GAAAA,MAAYT,EAAIU,UACT,SAAC,KAAD,GACR,C","sources":["API/API.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","page/Home/Home.jsx","services/Loader.styled.jsx","services/Loader.jsx","services/Notify.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'de00aa4ca9ae6abca13b6e86c745ef32';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};","import styled from 'styled-components';\n\nexport const MovieWrapp = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  min-width: 140px;\n  width: 140px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 6px;\n  border: 1px solid rgba(227, 227, 227, 1);\n  padding-bottom: 10px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: #fff;\n  text-align: center;\n\n  &:nth-child(8n) {\n    margin-right: 0;\n  }\n\n  & a {\n    text-decoration: none;\n    color: #032541;\n  }\n\n  & p {\n    font-weight: 600;\n  }\n\n  & img {\n    width: 138px;\n    height: 207px;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport imgPlaceholder from 'placeholder/noimg.png';\nimport { MovieWrapp, MovieItem } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <MovieItem key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : imgPlaceholder\n          }\n          alt={title}\n        />\n        <p>{title}</p>\n      </Link>\n    </MovieItem>\n  ));\n\n  return <MovieWrapp>{elements}</MovieWrapp>;\n};","import { getTrendingMovies } from 'API/API';\nimport { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport Loader from 'services/Loader';\nimport Notify from 'services/Notify';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await getTrendingMovies();\n        setMovies(result.results);\n      } catch (e) {\n        setError(e.toJSON());\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {error && <Notify msg={error} />}\n      <h1>Trending today</h1>\n      <MovieList movies={movies} />\n    </main>\n  );\n}","import styled from 'styled-components';\n\nexport const LoaderWrapp = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.3);\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapp } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapp>\n      <RotatingLines\n        strokeColor=\"#032541\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrapp>\n  );\n}","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport React from 'react';\n\nexport default function Notify({ msg }) {\n  toast.error(msg.message);\n  return <ToastContainer />;\n}"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","id","getMovieCredits","cast","getMovieReviews","results","MovieWrapp","styled","MovieItem","MovieList","movies","location","useLocation","elements","map","title","poster_path","to","state","from","src","imgPlaceholder","alt","Home","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchMovies","result","toJSON","msg","LoaderWrapp","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Notify","toast","message"],"sourceRoot":""}