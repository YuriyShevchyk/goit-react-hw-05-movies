{"version":3,"file":"static/js/98.9fa3a68b.chunk.js","mappings":"wSAIMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHiB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKQ,SAFiB,2CAAH,qD,iJCjCfC,EAAgBC,EAAAA,GAAAA,GAAH,8DAKbC,EAAWD,EAAAA,GAAAA,GAAH,2X,SCDN,SAASE,EAAT,GAAkC,IACzCJ,EADwC,EAAbK,UACPC,KAAI,SAAAC,GAC5B,IAAQX,EAA+CW,EAA/CX,GAAIY,EAA2CD,EAA3CC,aAAcC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UAEzC,OACE,UAACP,EAAD,YACE,gBACEQ,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAEP,wBACE,uBAAIA,GAAgC,WAEtC,uBAAIC,GAAwB,UAZfd,EAelB,IAED,OAAO,SAACK,EAAD,UAAgBD,GACxB,CCxBc,SAASc,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,GAA3C,eAAOV,EAAP,KAAkBW,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRtB,EAAAA,EAAAA,IAAgBoB,GAASG,KAAKJ,EAC/B,GAAE,CAACC,IAECZ,EAIL,OAAyB,IAArBA,EAAUgB,QACL,mEAGF,SAACjB,EAAD,CAAUC,UAAWA,GAC7B,C","sources":["API/API.jsx","components/Cast/CastList/CastList.styled.jsx","components/Cast/CastList/CastList.jsx","components/Cast/CastList/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'de00aa4ca9ae6abca13b6e86c745ef32';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};","import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  min-width: 140px;\n  width: 140px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 6px;\n  border: 1px solid rgba(227, 227, 227, 1);\n  padding-bottom: 10px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: #fff;\n  text-align: center;\n\n  &:nth-child(8n) {\n    margin-right: 0;\n  }\n\n  & img {\n    width: 100%;\n  }\n`;","import imgPlaceholder from 'placeholder/noimg.png';\nimport {\n  CastContainer,\n  CastItem,\n} from 'components/Cast/CastList/CastList.styled';\n\nexport default function CastList({ movieCast }) {\n  const results = movieCast.map(item => {\n    const { id, profile_path, original_name, character } = item;\n\n    return (\n      <CastItem key={id}>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n              : imgPlaceholder\n          }\n          alt={original_name}\n        />\n        <p>\n          <b>{original_name ? original_name : '...'}</b>\n        </p>\n        <p>{character ? character : '...'}</p>\n      </CastItem>\n    );\n  });\n\n  return <CastContainer>{results}</CastContainer>;\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'API/API';\nimport CastList from 'components/Cast/CastList/CastList';\n\nexport default function Cast() {\n  const [movieCast, setMovieCast] = useState(0);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(setMovieCast);\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  if (movieCast.length === 0) {\n    return <p>We don't have any cast for this movie.</p>;\n  }\n\n  return <CastList movieCast={movieCast} />;\n}"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","id","getMovieCredits","cast","getMovieReviews","results","CastContainer","styled","CastItem","CastList","movieCast","map","item","profile_path","original_name","character","src","imgPlaceholder","alt","Cast","useState","setMovieCast","movieId","useParams","useEffect","then","length"],"sourceRoot":""}