{"version":3,"file":"static/js/518.e74ed8cb.chunk.js","mappings":"ySAIMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHiB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKQ,SAFiB,2CAAH,qD,yJChCfC,EAAYC,EAAAA,GAAAA,IAAH,+KAKI,SAAAC,GAAK,OAAIA,EAAMC,aAAV,IAGlBC,EAASH,EAAAA,GAAAA,IAAH,yCAINI,EAAcJ,EAAAA,GAAAA,IAAH,oEAMXK,EAAUL,EAAAA,GAAAA,IAAH,wLASPM,EAASN,EAAAA,GAAAA,IAAH,0CAINO,GAAOP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,oQAeJS,EAAcT,EAAAA,GAAAA,IAAH,qE,6BCrCP,SAASU,EAAT,GAA+B,IAAD,IAATC,EAAS,EAATA,MAE5BC,EAAI,qBADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,UAGnCG,EAOEJ,EAPFI,YACAC,EAMEL,EANFK,MACAC,EAKEN,EALFM,aACAC,EAIEP,EAJFO,SACAC,EAGER,EAHFQ,OACAC,EAEET,EAFFS,aACAlB,EACES,EADFT,cAGImB,EAAQ,oEAAgEnB,GAC9E,OACE,iCACE,SAACH,EAAD,CAAWG,cAAemB,EAA1B,UACE,UAAChB,EAAD,YACE,SAACF,EAAD,CACEmB,IACEP,EAAW,0CAC4BA,GACnCQ,KAGR,UAACnB,EAAD,YACE,wBAAKY,KACL,wBACE,uBAAII,OAEN,wCACe,KACb,yBACGH,EAAeO,KAAKC,MAAsB,IAAfR,EAAsB,IAAM,MAD1D,WAIF,sCACA,uBAAIC,GAAsB,SAC1B,oCACA,uBAAIC,EAASA,EAAOO,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MAAQ,iBAI9D,UAACpB,EAAD,YACE,oDACA,UAACH,EAAD,YACE,SAACC,EAAD,CAAMO,MAAO,CAAEF,KAAAA,GAAQkB,GAAG,OAA1B,mBAGA,SAACvB,EAAD,CAAMO,MAAO,CAAEF,KAAAA,GAAQkB,GAAG,UAA1B,yBAIF,SAAC,KAAD,SAIP,C,oCCpEUC,EAAS/B,EAAAA,GAAAA,OAAH,0O,UCMJ,SAASgC,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEF3B,EAAI,qBADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,IAC/B6B,GAAWC,EAAAA,EAAAA,MAqBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfN,GAAW,GACXF,EAAS,MAHM,UAKM3C,EAAAA,EAAAA,IAAa8C,GALnB,OAKTM,EALS,OAMfX,EAASW,GANM,gDAQfT,EAAS,KAAEU,UARI,yBAUfR,GAAW,GAVI,4EAAH,qDAahBM,GACD,GAAE,CAACL,IAEC5B,GAKH,gCACG0B,IAAW,SAACU,EAAA,EAAD,IACXZ,IAAS,SAACa,EAAA,EAAD,CAAQC,IAAKd,KACvB,SAACJ,EAAD,CAAQmB,QA3BG,kBAAMT,EAAS7B,EAAf,EA2BX,yBACCD,IAAS,SAACD,EAAD,CAAWC,MAAOA,OARvB,IAWV,C,gFC9CYwC,E,QAAcnD,GAAAA,IAAH,qN,SCCT,SAAS+C,IACtB,OACE,SAACI,EAAD,WACE,SAAC,KAAD,CACEC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,gGCVc,SAASR,EAAT,GAA0B,IAARC,EAAO,EAAPA,IAE/B,OADAQ,EAAAA,GAAAA,MAAYR,EAAIS,UACT,SAAC,KAAD,GACR,C","sources":["API/API.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","page/MovieDetails/MovieDetails.styled.jsx","page/MovieDetails/MovieDetails.jsx","services/Loader.styled.jsx","services/Loader.jsx","services/Notify.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'de00aa4ca9ae6abca13b6e86c745ef32';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  height: 450px;\n  background-position: right -200px top;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(${props => props.backdrop_path});\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n`;\n\nexport const Description = styled.div`\n  padding-left: 30px;\n  color: #032541;\n\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  background-image: linear-gradient(\n    to right,\n    rgba(220.5, 220.5, 220.5, 1) 150px,\n    rgba(220.5, 220.5, 220.5, 0.84) 100%\n  );\n`;\n\nexport const NavTab = styled.div`\n  display: flex;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid #032541;\n  margin-right: 10px;\n\n  &.active {\n    color: #ea8a49;\n    background-color: #032541;\n  }\n`;\n\nexport const WrapperDesc = styled.div`\n  margin-top: 30px;\n  margin-bottom: 10px;\n`;","import {\n    Container,\n    Description,\n    Poster,\n    Wrapper,\n    NavTab,\n    Link,\n    WrapperDesc,\n  } from 'components/MovieCard/MovieCard.styled';\n  import { Outlet, useLocation } from 'react-router-dom';\n  import imgPlaceholder from 'placeholder/noimg.png';\n  \n  export default function MovieCard({ movie }) {\n    const location = useLocation();\n    const from = location.state?.from ?? '/movies';\n  \n    const {\n      poster_path,\n      title,\n      vote_average,\n      overview,\n      genres,\n      release_date,\n      backdrop_path,\n    } = movie;\n  \n    const backdrop = `https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${backdrop_path}`;\n    return (\n      <>\n        <Container backdrop_path={backdrop}>\n          <Wrapper>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : imgPlaceholder\n              }\n            />\n            <Description>\n              <h1>{title}</h1>\n              <p>\n                <b>{release_date}</b>\n              </p>\n              <p>\n                User score :{' '}\n                <b>\n                  {vote_average ? Math.round((vote_average * 100) / 10) : '...'}%\n                </b>\n              </p>\n              <h2>Overview</h2>\n              <p>{overview ? overview : '...'}</p>\n              <h2>Genres</h2>\n              <p>{genres ? genres.map(item => item.name).join(', ') : '...'}</p>\n            </Description>\n          </Wrapper>\n        </Container>\n        <WrapperDesc>\n          <h2>Additional information</h2>\n          <NavTab>\n            <Link state={{ from }} to=\"cast\">\n              Cast\n            </Link>\n            <Link state={{ from }} to=\"reiwers\">\n              Reiwers\n            </Link>\n          </NavTab>\n          <Outlet />\n        </WrapperDesc>\n      </>\n    );\n  }","import styled from 'styled-components';\n\nexport const GoBack = styled.button`\n  padding: 2px 16px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  background-color: #fff;\n  color: black;\n  font-weight: 500;\n  border: 1px solid #032541;\n  cursor: pointer;\n`;","import MovieCard from 'components/MovieCard/MovieCard';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'API/API';\nimport Loader from 'services/Loader';\nimport { GoBack } from './MovieDetails.styled';\nimport Notify from 'services/Notify';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(0);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const result = await getMovieById(movieId);\n        setMovie(result);\n      } catch (e) {\n        setError(e.toJSON());\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Notify msg={error} />}\n      <GoBack onClick={goBack}>‚Üê Back</GoBack>\n      {movie && <MovieCard movie={movie} />}\n    </>\n  );\n}","import styled from 'styled-components';\n\nexport const LoaderWrapp = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.3);\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapp } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapp>\n      <RotatingLines\n        strokeColor=\"#032541\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrapp>\n  );\n}","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport React from 'react';\n\nexport default function Notify({ msg }) {\n  toast.error(msg.message);\n  return <ToastContainer />;\n}"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","id","getMovieCredits","cast","getMovieReviews","results","Container","styled","props","backdrop_path","Poster","Description","Wrapper","NavTab","Link","NavLink","WrapperDesc","MovieCard","movie","from","useLocation","state","poster_path","title","vote_average","overview","genres","release_date","backdrop","src","imgPlaceholder","Math","round","map","item","name","join","to","GoBack","MovieDetails","useState","setMovie","error","setError","loading","setLoading","movieId","useParams","navigate","useNavigate","useEffect","fetchMovie","result","toJSON","Loader","Notify","msg","onClick","LoaderWrapp","strokeColor","strokeWidth","animationDuration","width","visible","toast","message"],"sourceRoot":""}